name: Build

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      os:
        required: true
        type: string
      setupScript:
        required: true
        type: string
      buildArgs:
        required: true
        type: string
      artifactName:
        required: true
        type: string
      artifactPath:
        required: true
        type: string
      exportPath:
        required: true
        type: string

env:
  HAXE_VERSION: 4.3.6
  PROJECT_NAME: LumenEngine

jobs:
  build:
    name: Build
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: ${{ env.HAXE_VERSION }}
        
      - name: Restore existing build cache for faster compilation
        id: load-cache
        uses: actions/cache@v3
        with:
          # not caching the bin folder to prevent asset duplication and stuff like that
          key: cache-build-${{ inputs.exportPath }}
          path: |
            .haxelib/
            export/release/${{ inputs.exportPath }}/haxe/
            export/release/${{ inputs.exportPath }}/obj/
          restore-keys: |
            cache-build-${{ inputs.exportPath }}
            

      - name: Install libVLC
        if: inputs.name == 'Linux'
        run: sudo apt install libvlc-dev libvlccore-dev

      - name: Setup haxelib
        run: haxelib newrepo    
      - name: Install Libraries
        run: ${{ inputs.setupScript }}
        if: ${{ ! steps.load-cache.outputs.cache-hit }}

      - name: Compile
        run: haxelib run lime build ${{ inputs.buildArgs }}

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ inputs.artifactName }}
          path: ${{ inputs.artifactPath }}
          if-no-files-found: error      
      - name: Clearing already existing cache
        uses: actions/github-script@v6
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if (cache.key == "cache-build-${{ inputs.exportPath }}") {
                console.log('Clearing ' + cache.key + '...')
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
                console.log("Cache cleared.")
              }
            }
      - name: Uploading new cache
        uses: actions/cache@v3
        with:
          key: cache-build-${{ inputs.exportPath }}
          path: |
            .haxelib/
            export/release/${{ inputs.exportPath }}/haxe/
            export/release/${{ inputs.exportPath }}/obj/
          restore-keys: |
            cache-build-${{ inputs.exportPath }}